---
title: "Final_lab_Ruvolo"
author: "Edoardo Ruvolo"
format: html
editor: visual
---

## Main data set import
```{r setup, include= FALSE}
here::i_am("bt_empire_Ruvolo.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(stringr)
theme_bw()
```

Link to the [GitHub repository](https://github.com/Edrdrvl/bt_empire).

```{r}
# adjustment in the data loading.
BattleTech <- vroom(here("Data", "systems.csv"), na = "NA",
  col_types = cols(
    "Star_code" = col_double(),
    "star" = col_character(),
    "DISTANCE (LIGHTYEARS)" = col_double(),
    "Effective Temperature" = col_double(),
    "Relative Mass" = col_double(),
    "STAR RADIUS" = col_double(),
    "LUMINOSITY" = col_double(),
    "stellar type" = col_character(),
  ),
  locale = locale(decimal_mark = ",")
)
str(BattleTech)
```
Now i move to verify if the data have been uploaded correctly.

```{r}

# Verifying the numerical variables. 
numerical_variables <- c("Star_code", "DISTANCE (LIGHTYEARS)", "Effective Temperature", "Relative Mass", "STAR RADIUS","LUMINOSITY")
are_numerical <- sapply(BattleTech[numerical_variables], is.numeric)

# Expected number of variables and observation in my data set compared to the actual number of observation. 

expected_n_observation <- 1063
expected_n_variables <- 8
actual_n_observation <- nrow(BattleTech)
actual_n_variables <- ncol(BattleTech)

# Function to display the result in a message. 
if (all(are_numerical)) {
  message("All numerical variables are correctly recognized as numerical.")
} else {
  message("Some numerical variables are not recognized correctly.")
}

if ( actual_n_observation == expected_n_observation && actual_n_variables == expected_n_variables) {
  message("Data loaded successfully with the correct number of variables and observation.")
} else {
  message(
    "Data loading issue: Expected rows: ", expected_n_observation,
    ", Actual rows: ", actual_n_observation,
    "; Expected columns: ", expected_n_variables,
    ", Actual columns: ", actual_n_observation
  )
}
```

 
